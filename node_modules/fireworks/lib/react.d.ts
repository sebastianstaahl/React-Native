import * as React from 'react';
import { FireworksInput } from './fireworks';
declare type FireworksProps = {
    interval?: number;
    count?: number;
    calc?: (input: any, index: number) => FireworksInput;
};
export declare class Fireworks extends React.Component<FireworksProps> {
    _ivl: number;
    _idle: boolean;
    _ref: HTMLElement | null;
    render(): React.DetailedReactHTMLElement<{
        ref: (ref: HTMLElement | null) => HTMLElement | null;
        className: string;
    }, HTMLElement>;
    componentDidMount(): void;
    onIdle(): void;
    componentWillUnmount(): void;
    evaluate(): void;
}
declare type RequestIdleCallbackHandle = any;
declare type RequestIdleCallbackOptions = {
    timeout: number;
};
declare type RequestIdleCallbackDeadline = {
    readonly didTimeout: boolean;
    timeRemaining: () => number;
};
declare global {
    interface Window {
        requestIdleCallback: (callback: (deadline: RequestIdleCallbackDeadline) => void, opts?: RequestIdleCallbackOptions) => RequestIdleCallbackHandle;
        cancelIdleCallback: (handle: RequestIdleCallbackHandle) => void;
    }
}
export default Fireworks;
